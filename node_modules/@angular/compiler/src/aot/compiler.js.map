{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SchemaMetadata} from '@angular/core';\n\nimport {AnimationCompiler} from '../animation/animation_compiler';\nimport {AnimationParser} from '../animation/animation_parser';\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeMetadata, CompileProviderMetadata, CompileTypeSummary, createHostComponentMeta, identifierModuleUrl, identifierName} from '../compile_metadata';\nimport {DirectiveNormalizer} from '../directive_normalizer';\nimport {DirectiveWrapperCompileResult, DirectiveWrapperCompiler} from '../directive_wrapper_compiler';\nimport {ListWrapper} from '../facade/collection';\nimport {Identifiers, createIdentifier, createIdentifierToken} from '../identifiers';\nimport {CompileMetadataResolver} from '../metadata_resolver';\nimport {NgModuleCompiler} from '../ng_module_compiler';\nimport {OutputEmitter} from '../output/abstract_emitter';\nimport * as o from '../output/output_ast';\nimport {CompiledStylesheet, StyleCompiler} from '../style_compiler';\nimport {TemplateParser} from '../template_parser/template_parser';\nimport {ComponentFactoryDependency, DirectiveWrapperDependency, ViewClassDependency, ViewCompileResult, ViewCompiler} from '../view_compiler/view_compiler';\n\nimport {AotCompilerOptions} from './compiler_options';\nimport {GeneratedFile} from './generated_file';\nimport {StaticReflector} from './static_reflector';\nimport {StaticSymbol} from './static_symbol';\nimport {AotSummaryResolver} from './summary_resolver';\nimport {filterFileByPatterns} from './utils';\n\nexport class AotCompiler {\nprivate _animationCompiler = new AnimationCompiler();\n/**\n * @param {?} _metadataResolver\n * @param {?} _templateParser\n * @param {?} _styleCompiler\n * @param {?} _viewCompiler\n * @param {?} _dirWrapperCompiler\n * @param {?} _ngModuleCompiler\n * @param {?} _outputEmitter\n * @param {?} _summaryResolver\n * @param {?} _localeId\n * @param {?} _translationFormat\n * @param {?} _animationParser\n * @param {?} _staticReflector\n * @param {?} _options\n */\nconstructor(\nprivate _metadataResolver: CompileMetadataResolver,\nprivate _templateParser: TemplateParser,\nprivate _styleCompiler: StyleCompiler,\nprivate _viewCompiler: ViewCompiler,\nprivate _dirWrapperCompiler: DirectiveWrapperCompiler,\nprivate _ngModuleCompiler: NgModuleCompiler,\nprivate _outputEmitter: OutputEmitter,\nprivate _summaryResolver: AotSummaryResolver,\nprivate _localeId: string,\nprivate _translationFormat: string,\nprivate _animationParser: AnimationParser,\nprivate _staticReflector: StaticReflector,\nprivate _options: AotCompilerOptions) {}\n/**\n * @return {?}\n */\nclearCache() { this._metadataResolver.clearCache(); }\n/**\n * @param {?} rootFiles\n * @return {?}\n */\ncompileAll(rootFiles: string[]): Promise<GeneratedFile[]> {\n    const /** @type {?} */ programSymbols = extractProgramSymbols(this._staticReflector, rootFiles, this._options);\n    const {ngModuleByPipeOrDirective, files, ngModules} =\n        analyzeAndValidateNgModules(programSymbols, this._options, this._metadataResolver);\n    return Promise\n        .all(ngModules.map(\n            ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(\n                ngModule.type.reference, false)))\n        .then(() => {\n          const /** @type {?} */ sourceModules = files.map(\n              file => this._compileSrcFile(\n                  file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes,\n                  file.ngModules));\n          return ListWrapper.flatten(sourceModules);\n        });\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} ngModuleByPipeOrDirective\n * @param {?} directives\n * @param {?} pipes\n * @param {?} ngModules\n * @return {?}\n */\nprivate _compileSrcFile(\n      srcFileUrl: string, ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>,\n      directives: StaticSymbol[], pipes: StaticSymbol[],\n      ngModules: StaticSymbol[]): GeneratedFile[] {\n    const /** @type {?} */ fileSuffix = _splitTypescriptSuffix(srcFileUrl)[1];\n    const /** @type {?} */ statements: o.Statement[] = [];\n    const /** @type {?} */ exportedVars: string[] = [];\n    const /** @type {?} */ generatedFiles: GeneratedFile[] = [];\n\n    // write summary files\n    const /** @type {?} */ summaries: CompileTypeSummary[] = [\n      ...ngModules.map(ref => this._metadataResolver.getNgModuleSummary(ref)),\n      ...directives.map(ref => this._metadataResolver.getDirectiveSummary(ref)),\n      ...pipes.map(ref => this._metadataResolver.getPipeSummary(ref))\n    ];\n    generatedFiles.push(this._summaryResolver.serializeSummaries(srcFileUrl, summaries));\n\n    // compile all ng modules\n    exportedVars.push(\n        ...ngModules.map((ngModuleType) => this._compileModule(ngModuleType, statements)));\n\n    // compile directive wrappers\n    exportedVars.push(...directives.map(\n        (directiveType) => this._compileDirectiveWrapper(directiveType, statements)));\n\n    // compile components\n    directives.forEach((dirType) => {\n      const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata( /** @type {?} */((<any>dirType)));\n      if (!compMeta.isComponent) {\n        return Promise.resolve(null);\n      }\n      const /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n      if (!ngModule) {\n        throw new Error(\n            `Internal Error: cannot determine the module for component ${identifierName(compMeta.type)}!`);\n      }\n\n      _assertComponent(compMeta);\n\n      // compile styles\n      const /** @type {?} */ stylesCompileResults = this._styleCompiler.compileComponent(compMeta);\n      stylesCompileResults.externalStylesheets.forEach((compiledStyleSheet) => {\n        generatedFiles.push(this._codgenStyles(srcFileUrl, compiledStyleSheet, fileSuffix));\n      });\n\n      // compile components\n      exportedVars.push(\n          this._compileComponentFactory(compMeta, ngModule, fileSuffix, statements),\n          this._compileComponent(\n              compMeta, ngModule, ngModule.transitiveModule.directives,\n              stylesCompileResults.componentStylesheet, fileSuffix, statements));\n    });\n    if (statements.length > 0) {\n      const /** @type {?} */ srcModule = this._codegenSourceModule(\n          srcFileUrl, _ngfactoryModuleUrl(srcFileUrl), statements, exportedVars);\n      generatedFiles.unshift(srcModule);\n    }\n    return generatedFiles;\n  }\n/**\n * @param {?} ngModuleType\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileModule(ngModuleType: StaticSymbol, targetStatements: o.Statement[]): string {\n    const /** @type {?} */ ngModule = this._metadataResolver.getNgModuleMetadata(ngModuleType);\n    const /** @type {?} */ providers: CompileProviderMetadata[] = [];\n\n    if (this._localeId) {\n      providers.push({\n        token: createIdentifierToken(Identifiers.LOCALE_ID),\n        useValue: this._localeId,\n      });\n    }\n\n    if (this._translationFormat) {\n      providers.push({\n        token: createIdentifierToken(Identifiers.TRANSLATIONS_FORMAT),\n        useValue: this._translationFormat\n      });\n    }\n\n    const /** @type {?} */ appCompileResult = this._ngModuleCompiler.compile(ngModule, providers);\n\n    appCompileResult.dependencies.forEach((dep) => {\n      dep.placeholder.reference = this._staticReflector.getStaticSymbol(\n          _ngfactoryModuleUrl(identifierModuleUrl(dep.comp)), _componentFactoryName(dep.comp));\n    });\n\n    targetStatements.push(...appCompileResult.statements);\n    return appCompileResult.ngModuleFactoryVar;\n  }\n/**\n * @param {?} directiveType\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileDirectiveWrapper(directiveType: StaticSymbol, targetStatements: o.Statement[]):\n      string {\n    const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(directiveType);\n    const /** @type {?} */ dirCompileResult = this._dirWrapperCompiler.compile(dirMeta);\n\n    targetStatements.push(...dirCompileResult.statements);\n    return dirCompileResult.dirWrapperClassVar;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} fileSuffix\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileComponentFactory(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata, fileSuffix: string,\n      targetStatements: o.Statement[]): string {\n    const /** @type {?} */ hostMeta = createHostComponentMeta(\n        this._staticReflector.getStaticSymbol(\n            identifierModuleUrl(compMeta.type), `${identifierName(compMeta.type)}_Host`),\n        compMeta);\n    const /** @type {?} */ hostViewFactoryVar = this._compileComponent(\n        hostMeta, ngModule, [compMeta.type], null, fileSuffix, targetStatements);\n    const /** @type {?} */ compFactoryVar = _componentFactoryName(compMeta.type);\n    targetStatements.push(\n        o.variable(compFactoryVar)\n            .set(o.importExpr(\n                      createIdentifier(Identifiers.ComponentFactory), [o.importType(compMeta.type)])\n                     .instantiate(\n                         [\n                           o.literal(compMeta.selector),\n                           o.variable(hostViewFactoryVar),\n                           o.importExpr(compMeta.type),\n                         ],\n                         o.importType(\n                             createIdentifier(Identifiers.ComponentFactory),\n                             [o.importType(compMeta.type)], [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n    return compFactoryVar;\n  }\n/**\n * @param {?} compMeta\n * @param {?} ngModule\n * @param {?} directiveIdentifiers\n * @param {?} componentStyles\n * @param {?} fileSuffix\n * @param {?} targetStatements\n * @return {?}\n */\nprivate _compileComponent(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata,\n      directiveIdentifiers: CompileIdentifierMetadata[], componentStyles: CompiledStylesheet,\n      fileSuffix: string, targetStatements: o.Statement[]): string {\n    const /** @type {?} */ parsedAnimations = this._animationParser.parseComponent(compMeta);\n    const /** @type {?} */ directives =\n        directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n    const /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(\n        pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n\n    const /** @type {?} */ parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, directives, pipes, ngModule.schemas,\n        identifierName(compMeta.type));\n    const /** @type {?} */ stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n    const /** @type {?} */ compiledAnimations =\n        this._animationCompiler.compile(identifierName(compMeta.type), parsedAnimations);\n    const /** @type {?} */ viewResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, stylesExpr, pipes, compiledAnimations);\n    if (componentStyles) {\n      targetStatements.push(\n          ..._resolveStyleStatements(this._staticReflector, componentStyles, fileSuffix));\n    }\n    compiledAnimations.forEach(entry => targetStatements.push(...entry.statements));\n    targetStatements.push(..._resolveViewStatements(this._staticReflector, viewResult));\n    return viewResult.viewClassVar;\n  }\n/**\n * @param {?} fileUrl\n * @param {?} stylesCompileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nprivate _codgenStyles(\n      fileUrl: string, stylesCompileResult: CompiledStylesheet, fileSuffix: string): GeneratedFile {\n    _resolveStyleStatements(this._staticReflector, stylesCompileResult, fileSuffix);\n    return this._codegenSourceModule(\n        fileUrl, _stylesModuleUrl(\n                     stylesCompileResult.meta.moduleUrl, stylesCompileResult.isShimmed, fileSuffix),\n        stylesCompileResult.statements, [stylesCompileResult.stylesVar]);\n  }\n/**\n * @param {?} srcFileUrl\n * @param {?} genFileUrl\n * @param {?} statements\n * @param {?} exportedVars\n * @return {?}\n */\nprivate _codegenSourceModule(\n      srcFileUrl: string, genFileUrl: string, statements: o.Statement[],\n      exportedVars: string[]): GeneratedFile {\n    return new GeneratedFile(\n        srcFileUrl, genFileUrl,\n        this._outputEmitter.emitStatements(genFileUrl, statements, exportedVars));\n  }\n}\n\nfunction AotCompiler_tsickle_Closure_declarations() {\n /** @type {?} */\nAotCompiler.prototype._animationCompiler;\n /** @type {?} */\nAotCompiler.prototype._metadataResolver;\n /** @type {?} */\nAotCompiler.prototype._templateParser;\n /** @type {?} */\nAotCompiler.prototype._styleCompiler;\n /** @type {?} */\nAotCompiler.prototype._viewCompiler;\n /** @type {?} */\nAotCompiler.prototype._dirWrapperCompiler;\n /** @type {?} */\nAotCompiler.prototype._ngModuleCompiler;\n /** @type {?} */\nAotCompiler.prototype._outputEmitter;\n /** @type {?} */\nAotCompiler.prototype._summaryResolver;\n /** @type {?} */\nAotCompiler.prototype._localeId;\n /** @type {?} */\nAotCompiler.prototype._translationFormat;\n /** @type {?} */\nAotCompiler.prototype._animationParser;\n /** @type {?} */\nAotCompiler.prototype._staticReflector;\n /** @type {?} */\nAotCompiler.prototype._options;\n}\n\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @return {?}\n */\nfunction _resolveViewStatements(\n    reflector: StaticReflector, compileResult: ViewCompileResult): o.Statement[] {\n  compileResult.dependencies.forEach((dep) => {\n    if (dep instanceof ViewClassDependency) {\n      const /** @type {?} */ vfd = /** @type {?} */(( <ViewClassDependency>dep));\n      vfd.placeholder.reference =\n          reflector.getStaticSymbol(_ngfactoryModuleUrl(identifierModuleUrl(vfd.comp)), dep.name);\n    } else if (dep instanceof ComponentFactoryDependency) {\n      const /** @type {?} */ cfd = /** @type {?} */(( <ComponentFactoryDependency>dep));\n      cfd.placeholder.reference = reflector.getStaticSymbol(\n          _ngfactoryModuleUrl(identifierModuleUrl(cfd.comp)), _componentFactoryName(cfd.comp));\n    } else if (dep instanceof DirectiveWrapperDependency) {\n      const /** @type {?} */ dwd = /** @type {?} */(( <DirectiveWrapperDependency>dep));\n      dwd.placeholder.reference =\n          reflector.getStaticSymbol(_ngfactoryModuleUrl(identifierModuleUrl(dwd.dir)), dwd.name);\n    }\n  });\n  return compileResult.statements;\n}\n/**\n * @param {?} reflector\n * @param {?} compileResult\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(\n    reflector: StaticReflector, compileResult: CompiledStylesheet,\n    fileSuffix: string): o.Statement[] {\n  compileResult.dependencies.forEach((dep) => {\n    dep.valuePlaceholder.reference = reflector.getStaticSymbol(\n        _stylesModuleUrl(dep.moduleUrl, dep.isShimmed, fileSuffix), dep.name);\n  });\n  return compileResult.statements;\n}\n/**\n * @param {?} dirUrl\n * @return {?}\n */\nfunction _ngfactoryModuleUrl(dirUrl: string): string {\n  const /** @type {?} */ urlWithSuffix = _splitTypescriptSuffix(dirUrl);\n  return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} comp\n * @return {?}\n */\nfunction _componentFactoryName(comp: CompileIdentifierMetadata): string {\n  return `${identifierName(comp)}NgFactory`;\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl: string, shim: boolean, suffix: string): string {\n  return `${stylesheetUrl}${shim ? '.shim' : ''}.ngstyle${suffix}`;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction _assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new Error(\n        `Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n  }\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction _splitTypescriptSuffix(path: string): string[] {\n  if (path.endsWith('.d.ts')) {\n    return [path.slice(0, -5), '.ts'];\n  }\n\n  const /** @type {?} */ lastDot = path.lastIndexOf('.');\n\n  if (lastDot !== -1) {\n    return [path.substring(0, lastDot), path.substring(lastDot)];\n  }\n\n  return [path, ''];\n}\n\nexport interface NgAnalyzedModules {\n  ngModules: CompileNgModuleMetadata[];\n  ngModuleByPipeOrDirective: Map<StaticSymbol, CompileNgModuleMetadata>;\n  files: Array<{\n    srcUrl: string,\n    directives: StaticSymbol[],\n    pipes: StaticSymbol[],\n    ngModules: StaticSymbol[]\n  }>;\n  symbolsMissingModule?: StaticSymbol[];\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} options\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeNgModules(\n    programStaticSymbols: StaticSymbol[],\n    options: {includeFilePattern?: RegExp, excludeFilePattern?: RegExp},\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const {ngModules, symbolsMissingModule} =\n      _createNgModules(programStaticSymbols, options, metadataResolver);\n  return _analyzeNgModules(ngModules, symbolsMissingModule);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} options\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeAndValidateNgModules(\n    programStaticSymbols: StaticSymbol[],\n    options: {includeFilePattern?: RegExp, excludeFilePattern?: RegExp},\n    metadataResolver: CompileMetadataResolver): NgAnalyzedModules {\n  const /** @type {?} */ result = analyzeNgModules(programStaticSymbols, options, metadataResolver);\n  if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n    const /** @type {?} */ messages = result.symbolsMissingModule.map(\n        s => `Cannot determine the module for class ${s.name} in ${s.filePath}!`);\n    throw new Error(messages.join('\\n'));\n  }\n  return result;\n}\n/**\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @return {?}\n */\nfunction _analyzeNgModules(\n    ngModuleMetas: CompileNgModuleMetadata[],\n    symbolsMissingModule: StaticSymbol[]): NgAnalyzedModules {\n  const /** @type {?} */ moduleMetasByRef = new Map<any, CompileNgModuleMetadata>();\n  ngModuleMetas.forEach((ngModule) => moduleMetasByRef.set(ngModule.type.reference, ngModule));\n  const /** @type {?} */ ngModuleByPipeOrDirective = new Map<StaticSymbol, CompileNgModuleMetadata>();\n  const /** @type {?} */ ngModulesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngDirectivesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ ngPipesByFile = new Map<string, StaticSymbol[]>();\n  const /** @type {?} */ filePaths = new Set<string>();\n\n  // Looping over all modules to construct:\n  // - a map from file to modules `ngModulesByFile`,\n  // - a map from file to directives `ngDirectivesByFile`,\n  // - a map from file to pipes `ngPipesByFile`,\n  // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n  ngModuleMetas.forEach((ngModuleMeta) => {\n    const /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n    filePaths.add(srcFileUrl);\n    ngModulesByFile.set(\n        srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n\n    ngModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n      const /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n      filePaths.add(fileUrl);\n      ngDirectivesByFile.set(\n          fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n      ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n    });\n    ngModuleMeta.declaredPipes.forEach((pipeIdentifier) => {\n      const /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n      filePaths.add(fileUrl);\n      ngPipesByFile.set(\n          fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n      ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n    });\n  });\n\n  const /** @type {?} */ files:\n      {srcUrl: string,\n       directives: StaticSymbol[],\n       pipes: StaticSymbol[],\n       ngModules: StaticSymbol[]}[] = [];\n\n  filePaths.forEach((srcUrl) => {\n    const /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n    const /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n    const /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n    files.push({srcUrl, directives, pipes, ngModules});\n  });\n\n  return {\n    // map directive/pipe to module\n    ngModuleByPipeOrDirective,\n    // list modules and directives for every source file\n    files,\n    ngModules: ngModuleMetas, symbolsMissingModule\n  };\n}\n/**\n * @param {?} staticReflector\n * @param {?} files\n * @param {?=} options\n * @return {?}\n */\nexport function extractProgramSymbols(\n    staticReflector: StaticReflector, files: string[],\n    options: {includeFilePattern?: RegExp, excludeFilePattern?: RegExp} = {}): StaticSymbol[] {\n  const /** @type {?} */ staticSymbols: StaticSymbol[] = [];\n  files.filter(fileName => filterFileByPatterns(fileName, options)).forEach(sourceFile => {\n    const /** @type {?} */ moduleMetadata = staticReflector.getModuleMetadata(sourceFile);\n    if (!moduleMetadata) {\n      console.error(`WARNING: no metadata found for ${sourceFile}`);\n      return;\n    }\n\n    const /** @type {?} */ metadata = moduleMetadata['metadata'];\n\n    if (!metadata) {\n      return;\n    }\n\n    for (const /** @type {?} */ symbol of Object.keys(metadata)) {\n      if (metadata[symbol] && metadata[symbol].__symbolic == 'error') {\n        // Ignore symbols that are only included to record error information.\n        continue;\n      }\n      staticSymbols.push(staticReflector.getStaticSymbol(sourceFile, symbol));\n    }\n  });\n\n  return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} options\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(\n    programStaticSymbols: StaticSymbol[],\n    options: {includeFilePattern?: RegExp, excludeFilePattern?: RegExp},\n    metadataResolver: CompileMetadataResolver):\n    {ngModules: CompileNgModuleMetadata[], symbolsMissingModule: StaticSymbol[]} {\n  const /** @type {?} */ ngModules = new Map<any, CompileNgModuleMetadata>();\n  const /** @type {?} */ programPipesAndDirectives: StaticSymbol[] = [];\n  const /** @type {?} */ ngModulePipesAndDirective = new Set<StaticSymbol>();\n\n  const /** @type {?} */ addNgModule = (staticSymbol: any) => {\n    if (ngModules.has(staticSymbol) || !filterFileByPatterns(staticSymbol.filePath, options)) {\n      return false;\n    }\n    const /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n    if (ngModule) {\n      ngModules.set(ngModule.type.reference, ngModule);\n      ngModule.declaredDirectives.forEach((dir) => ngModulePipesAndDirective.add(dir.reference));\n      ngModule.declaredPipes.forEach((pipe) => ngModulePipesAndDirective.add(pipe.reference));\n      // For every input module add the list of transitively included modules\n      ngModule.transitiveModule.modules.forEach(modMeta => addNgModule(modMeta.reference));\n    }\n    return !!ngModule;\n  };\n  programStaticSymbols.forEach((staticSymbol) => {\n    if (!addNgModule(staticSymbol) &&\n        (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n      programPipesAndDirectives.push(staticSymbol);\n    }\n  });\n\n  // Throw an error if any of the program pipe or directives is not declared by a module\n  const /** @type {?} */ symbolsMissingModule =\n      programPipesAndDirectives.filter(s => !ngModulePipesAndDirective.has(s));\n\n  return {ngModules: Array.from(ngModules.values()), symbolsMissingModule};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}